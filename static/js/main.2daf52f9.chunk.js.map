{"version":3,"sources":["components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Charts/Charts.js","components/CountryPicker/CountryPicker.js","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justifyContent","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2daf52f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react'\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nexport const Cards = ({data: {confirmed,recovered,deaths,lastUpdate}}) => {\n    if(!confirmed){\n        return \"loading...\";\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justifyContent='center'>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/></Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/></Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\n\n","import axios from \"axios\";\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async(country) => {\n\n     let changeableUrl = url;\n     if(country){\n         changeableUrl = `${url}/countries/${country}`;\n     }\n    try{\n        const {data: {confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\n\n\n        return {confirmed,recovered,deaths,lastUpdate};\n    }\n    catch(error){\n           return error;\n    }\n}\n\nexport const fetchDailyData = async() => {\n    try{\n        const {data} = await axios.get(`${url}/daily`)\n        \n        const modifiedData = data.map((dailyData)=>({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }))\n        return modifiedData;\n    }\n    \n    catch(error){\n        return error;\n\n    }\n}\n\nexport const fetchCountries = async() => {\n    try{\n        const {data: {countries}} = await axios.get(`${url}/countries`);\n         \n        return countries.map((country)=>country.name);\n     \n    }\n    catch(error){\n        return error;\n    }\n}\n\n","import React, { useState, useEffect } from 'react'\nimport { fetchDailyData } from '../../api'\nimport { Line, Bar} from 'react-chartjs-2'\n\nimport styles from './Charts.module.css'\n\nexport const Charts = ({data: {confirmed,deaths,recovered}, country}) => {\n\n    const [dailyData, setDailyData] = useState([])\n\n    useEffect(() => {\n       const fetchAPI = async() => {\n          setDailyData(await fetchDailyData())\n       }\n       \n       fetchAPI();\n    },[])\n    const barChart = (\n        confirmed ? (\n          <Bar\n            data={{\n              labels: ['Infected', 'Recovered', 'Deaths'],\n              datasets: [\n                {\n                  label: 'People',\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                  data: [confirmed.value, recovered.value, deaths.value],\n                },\n              ],\n            }}\n            options={{\n              legend: { display: false },\n              title: { display: true, text: `Current state in ${country}` },\n            }}\n          />\n        ) : null\n      );\n\n\n    const lineChart = (\n        dailyData[0]\n        ?(\n            <Line \n            data={{\n                labels: dailyData.map(({date})=>date),\n                datasets: [{\n                    data: dailyData.map(({confirmed})=>confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true\n                    \n                },{\n                    data: dailyData.map(({deaths})=>deaths),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: '#rgba(255,0,0,0.5)',\n                    fill: true\n                    \n                }],\n\n            }}\n        />):null\n    );\n            \n    \n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\n\n","import React,{ useState, useEffect} from 'react'\nimport { NativeSelect, FormControl } from '@material-ui/core'\nimport { fetchCountries } from '../../api'\n\nimport styles from './CountryPicker.module.css'\n\nexport const CountryPicker = ({ handleCountryChange }) => {\n    const [countries, setCountries] = useState([]);\n  \n    useEffect(() => {\n      const fetchAPI = async () => {\n        setCountries(await fetchCountries());\n      };\n  \n      fetchAPI();\n    }, []);\n \n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                { countries.map((country, i)=><option value={country} key={i}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\n","import React, { Component } from 'react'\nimport styles from './App.module.css';\nimport {Cards, Charts ,CountryPicker} from './components';\nimport { fetchData } from './api';\n\n class App extends Component {\n  \n  state = {\n    data: {},\n    country: ''\n  }\n\n\n  async componentDidMount(){\n    const data = await fetchData();\n     this.setState({data})\n     \n  }\n\n    handleCountryChange = async(country) => {\n      const data = await fetchData(country);\n      \n      this.setState({data, country: country})\n\n    }\n    \n   render() {\n\n     const {data,country} = this.state;\n     return (\n      <div className={styles.container}>\n        <h1>COVID-19</h1>\n      <Cards data={data}/>\n      <CountryPicker handleCountryChange={this.handleCountryChange} />\n      <Charts data={data} country={country}/>\n    </div>\n     )\n   }\n }\n \n export default App\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}